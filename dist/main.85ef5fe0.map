{"version":3,"sources":["src\\refresh.ts","src\\error.ts","src\\name.ts","src\\surname.ts","src\\mail.ts","src\\pass.ts","src\\v_pass.ts","src\\toggle_pass.ts","src\\toggle_v_pass.ts","src\\remove.ts","src\\create.ts","src\\clear.ts","src\\main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACO,IAAM,4BAAU,SAAV,OAAU,GAAW;AAC9B,QAAM,YAAY,SAAS,aAA3B;AACA,QAAM,WAAoB,SAAS,aAAT,CAA2C,IAArE;AACA,QAAM,YAAY,SAAS,cAAT,CAAwB,QAAxB,CAAlB;AACA,cAAU,SAAV,CAAoB,MAApB,CAA2B,OAA3B;AACA,cAAU,KAAV,CAAgB,UAAhB,GAA6B,QAA7B;AACD,CANI;;;;;;;ACAP;AACO,IAAM,wBAAQ,SAAR,KAAQ,GAAW;AAC5B,QAAM,YAAY,SAAS,aAA3B;AACA,QAAM,WAAoB,SAAS,aAAT,CAA2C,IAArE;AACA,QAAM,YAAY,SAAS,cAAT,CAAwB,QAAxB,CAAlB;AACA,cAAU,SAAV,CAAoB,GAApB,CAAwB,OAAxB;AACA,cAAU,KAAV,CAAgB,UAAhB,GAA6B,SAA7B;AACA,cAAU,IAAV;AACH,CAPM;;;;;;;;;ACFP;;AAEA;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAc;AACnC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,YAAY,KAAK,QAAL,CAAc,CAAd,CAAlB;AACA,QAAM,kBAA0B,UAAhC;AACA,QAAM,oBAA6B,gBAAgB,IAAhB,CAAqB,UAAU,KAA/B,CAAnC;AACA,QAAI,CAAC,iBAAL,EAAwB;AACpB,kBAAU,KAAV;AACA;AACA,eAAO,iBAAP;AACH;AACD,WAAO,iBAAP;AACH,CAXM;;;;;;;;;ACHP;;AAEA;AACO,IAAM,sCAAe,SAAf,YAAe,GAAc;AACtC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,UAAU,KAAK,QAAL,CAAc,CAAd,CAAhB;AACA,QAAM,gBAAwB,UAA9B;AACA,QAAM,kBAA2B,cAAc,IAAd,CAAmB,QAAQ,KAA3B,CAAjC;AACA,QAAI,CAAC,eAAL,EAAsB;AAClB,gBAAQ,KAAR;AACA;AACA,eAAO,eAAP;AACH;AACD,WAAO,eAAP;AACH,CAXM;;;;;;;;;ACHP;;AAEA;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAc;AACnC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,QAAQ,KAAK,QAAL,CAAc,CAAd,CAAd;AACA,QAAM,cAAsB,mFAA5B;AACA,QAAM,eAAwB,YAAY,IAAZ,CAAiB,MAAM,KAAvB,CAA9B;AACA,QAAI,CAAC,YAAL,EAAmB;AACf,cAAM,KAAN;AACA;AACA,eAAO,YAAP;AACH;AACD,WAAO,YAAP;AACH,CAXM;;;;;;;;;ACHP;;AAEA;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAc;AACnC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,WAAW,KAAK,QAAL,CAAc,CAAd,CAAjB;AACA,QAAM,aAAqB,4HAA3B;AACA,QAAM,eAAwB,WAAW,IAAX,CAAgB,SAAS,KAAzB,CAA9B;AACA,QAAI,CAAC,YAAL,EAAmB;AACf,iBAAS,KAAT;AACA;AACA,eAAO,YAAP;AACH;AACD,WAAO,YAAP;AACH,CAXM;;;;;;;;;ACHP;;AACA;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAc;AACnC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,WAAW,KAAK,QAAL,CAAc,CAAd,CAAjB;AACA,QAAM,WAAW,KAAK,QAAL,CAAc,CAAd,CAAjB;AACA,QAAM,mBAA6B,SAAS,KAAT,KAAmB,SAAS,KAA/D;AACA,QAAI,CAAC,gBAAL,EAAuB;AACnB,iBAAS,KAAT;AACA;AACA,eAAO,gBAAP;AACH;AACD,WAAO,gBAAP;AACH,CAXM;;;;;;;ACFP;AACO,IAAM,kCAAa,SAAb,UAAa,GAAW;AACjC,QAAM,OAAO,SAAS,KAAT,CAAe,CAAf,CAAb;AACA,QAAM,WAAW,KAAK,QAAL,CAAc,CAAd,CAAjB;AACA,aAAS,IAAT,KAAkB,UAAlB,GACK,SAAS,IAAT,GAAgB,MADrB,GAEK,SAAS,IAAT,GAAgB,UAFrB;AAGH,CANM;;;;;;;ACDP;AACO,IAAM,wCAAgB,SAAhB,aAAgB,GAAW;AACpC,QAAM,OAAO,SAAS,KAAT,CAAe,CAAf,CAAb;AACA,QAAM,WAAW,KAAK,QAAL,CAAc,CAAd,CAAjB;AACA,aAAS,IAAT,KAAkB,UAAlB,GACK,SAAS,IAAT,GAAgB,MADrB,GAEK,SAAS,IAAT,GAAgB,UAFrB;AAGH,CANM;;;;;;;ACDP;AACO,IAAM,kCAAa,SAAb,UAAa,GAAW;AACjC,QAAM,UAAU,SAAS,cAAT,CAAwB,SAAxB,CAAhB;AACA,YAAQ,MAAR;AACH,CAHM;;;;;;;ACDP;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAW;AAChC,QAAM,aAA6B,SAAS,aAAT,CAAuB,KAAvB,CAAnC;AACA,QAAM,UAAgB,SAAS,cAAT,CAAwB,4BAAxB,CAAtB;AACA,eAAW,SAAX,CAAqB,GAArB,CAAyB,aAAzB;AACA,eAAW,WAAX,CAAuB,OAAvB;AACA,aAAS,IAAT,CAAc,WAAd,CAA0B,UAA1B;AACH,CANM;;;;;;;ACDP;AACO,IAAM,gCAAY,SAAZ,SAAY,GAAW;AAChC,QAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,QAAM,SAAuC,SAAS,gBAAT,CAA0B,0BAA1B,CAA7C;AACA,SAAK,IAAI,IAAY,CAArB,EAAwB,IAAI,OAAO,MAAnC,EAA2C,GAA3C,EAAgD;AAC5C,eAAO,CAAP,EAAU,KAAV,GAAkB,EAAlB;AACA,eAAO,CAAP,EAAU,SAAV,CAAoB,MAApB,CAA2B,OAA3B;AACH;AACD,QAAI,aAA2C,SAAS,gBAAT,CAA0B,UAA1B,CAA/C;AACA,SAAK,IAAI,IAAY,CAArB,EAAwB,IAAI,WAAW,MAAvC,EAA+C,GAA/C,EAAoD;AAChD,mBAAW,CAAX,EAAc,KAAd,CAAoB,UAApB,GAAiC,QAAjC;AACH;AACJ,CAXM;;;;ACAP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;AACA,IAAM,cAAc,SAAd,WAAc,CAAC,GAAD,EAAqB;AACrC,QAAI,cAAJ;AACA,QAAM,OAAgB,sBAAtB;AAAA,QACI,UAAmB,4BADvB;AAAA,QAEI,QAAiB,sBAFrB;AAAA,QAGI,OAAgB,sBAHpB;AAAA,QAII,SAAkB,wBAJtB;AAMA,QAAI,QAAQ,OAAR,IAAmB,KAAnB,IAA4B,IAA5B,IAAoC,MAAxC,EAAgD;AAC5C;AACA;AACH;AACJ,CAZD;AAcA,IAAM,SAAS,SAAS,cAAT,CAAwB,QAAxB,CAAf;AACA,OAAO,gBAAP,CAAwB,OAAxB,EAAiC,WAAjC;AAEA,IAAM,QAAQ,SAAS,cAAT,CAAwB,OAAxB,CAAd;AACA,MAAM,gBAAN,CAAuB,OAAvB,EAAgC,gBAAhC;AAEA,IAAM,WAAW,SAAS,cAAT,CAAwB,QAAxB,CAAjB;AACA,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,uBAAnC;AAEA,IAAM,cAAc,SAAS,cAAT,CAAwB,QAAxB,CAApB;AACA,YAAY,gBAAZ,CAA6B,OAA7B,EAAsC,4BAAtC;AAEA,IAAM,OAAwB,SAAS,KAAT,CAAe,CAAf,CAA9B;AACA,KAAK,gBAAL,CAAsB,UAAtB,EAAkC,gBAAlC","file":"main.85ef5fe0.map","sourceRoot":"..","sourcesContent":["//при нажатии на клавишу, когда поле формы заполняется, подсветка и надпись пропадают\r\nexport const refresh = (): void => {\r\n    const targetInp = document.activeElement;\r\n    const targetEl: string = (document.activeElement as HTMLFormElement).name;\r\n    const hiddenDiv = document.getElementById(targetEl) as HTMLDivElement;\r\n    targetInp.classList.remove(\"error\");\r\n    hiddenDiv.style.visibility = \"hidden\";\r\n  };\r\n","\r\n//подсвечивает неправильно заполненное поле формы, показывает скрытую надпись слева\r\nexport const error = (): void => {\r\n    const targetInp = document.activeElement as HTMLInputElement;\r\n    const targetEl: string = (document.activeElement as HTMLFormElement).name;\r\n    const hiddenDiv = document.getElementById(targetEl) as HTMLDivElement;\r\n    targetInp.classList.add(\"error\");\r\n    hiddenDiv.style.visibility = \"visible\";\r\n    targetInp.blur();\r\n};","import { error } from \"./error\";\r\n\r\n//проверка поля с именем\r\nexport const checkName = (): boolean => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const firstName = form.elements[0] as HTMLInputElement;   \r\n    const firstNameRegexp: RegExp = /^[^\\s]+$/;\r\n    const firstNameCheckRes: boolean = firstNameRegexp.test(firstName.value);\r\n    if (!firstNameCheckRes) {\r\n        firstName.focus();\r\n        error();\r\n        return firstNameCheckRes;\r\n    }\r\n    return firstNameCheckRes;\r\n};","import { error } from \"./error\";\r\n\r\n//проверка поля с фамилией\r\nexport const checkSurname = (): boolean => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const surname = form.elements[1] as HTMLInputElement;\r\n    const surnameRegexp: RegExp = /^[^\\s]+$/;\r\n    const surnameCheckRes: boolean = surnameRegexp.test(surname.value);\r\n    if (!surnameCheckRes) {\r\n        surname.focus();\r\n        error();\r\n        return surnameCheckRes;\r\n    }\r\n    return surnameCheckRes;\r\n};\r\n","import { error } from \"./error\";\r\n\r\n//проверка поля с имейлом\r\nexport const checkMail = (): boolean => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const email = form.elements[2] as HTMLInputElement;\r\n    const emailRegexp: RegExp = /^[a-zA-Z0-9][a-zA-Z0-9._%+-]{0,63}@(?:[a-zA-Z0-9-]{1,63}\\.){1,125}[a-zA-Z]{2,63}$/;\r\n    const mailCheckRes: boolean = emailRegexp.test(email.value);\r\n    if (!mailCheckRes) {\r\n        email.focus();\r\n        error();\r\n        return mailCheckRes;\r\n    }\r\n    return mailCheckRes;\r\n};","import { error } from \"./error\";\r\n\r\n//проверка поля с паролем\r\nexport const checkPass = (): boolean => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const password = form.elements[3] as HTMLInputElement;    \r\n    const passRegexp: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#])[a-zA-Z0-9-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]{8,}$/;\r\n    const passCheckRes: boolean = passRegexp.test(password.value);\r\n    if (!passCheckRes) {\r\n        password.focus();\r\n        error();\r\n        return passCheckRes;\r\n    }\r\n    return passCheckRes;\r\n};","import { error } from \"./error\";\r\n//проверка поля с подтверждением пароля\r\nexport const validPass = (): boolean => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const password = form.elements[3] as HTMLInputElement;\r\n    const val_pass = form.elements[5] as HTMLInputElement;\r\n    const val_passCheckRes: boolean = (val_pass.value === password.value);\r\n    if (!val_passCheckRes) {\r\n        val_pass.focus();\r\n        error();\r\n        return val_passCheckRes;\r\n    }\r\n    return val_passCheckRes;\r\n};","//открывает и закрывает пароль\r\nexport const togglePass = (): void => {\r\n    const form = document.forms[0];\r\n    const password = form.elements[3] as HTMLInputElement;\r\n    password.type === \"password\" ?\r\n        (password.type = \"text\") :\r\n        (password.type = \"password\");\r\n};","//открывает и закрывает подтверждение пароля\r\nexport const toggleValPass = (): void => {\r\n    const form = document.forms[0];\r\n    const val_pass = form.elements[5] as HTMLInputElement;\r\n    val_pass.type === \"password\" ?\r\n        (val_pass.type = \"text\") :\r\n        (val_pass.type = \"password\");\r\n};","//удаление формы\r\nexport const removeForm = (): void => {\r\n    const wrapper = document.getElementById(\"wrapper\") as HTMLDivElement;\r\n    wrapper.remove();\r\n};","//создает приветствие в случае успешной регистрации\r\nexport const createReg = (): void => {\r\n    const registered: HTMLDivElement = document.createElement(\"div\");\r\n    const regText: Text = document.createTextNode(\"Спасибо за регистрацию :-)\");\r\n    registered.classList.add(\"wrapper-reg\");\r\n    registered.appendChild(regText);\r\n    document.body.appendChild(registered);\r\n};","//очистка формы\r\nexport const clearForm = (): void => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll(\"input.input, input.error\");    \r\n    for (let i: number = 0; i < inputs.length; i++) {\r\n        inputs[i].value = \"\";\r\n        inputs[i].classList.remove(\"error\");\r\n    }\r\n    let hiddenDivs: NodeListOf<HTMLInputElement> = document.querySelectorAll(\"er_group\");\r\n    for (let k: number = 0; k < hiddenDivs.length; k++) {\r\n        hiddenDivs[k].style.visibility = \"hidden\";\r\n    }\r\n};","import { error } from \"./error\";\r\nimport { refresh } from './refresh';\r\nimport { checkName } from './name';\r\nimport { checkSurname } from './surname';\r\nimport { checkMail } from './mail';\r\nimport { checkPass } from './pass';\r\nimport { validPass } from './v_pass';\r\nimport { togglePass } from './toggle_pass';\r\nimport { toggleValPass } from './toggle_v_pass';\r\nimport { removeForm } from './remove';\r\nimport { createReg} from './create';\r\nimport { clearForm } from './clear';\r\n\r\n\r\n//проверка полей формы\r\nconst checkInputs = (evt: Event): void => {\r\n    evt.preventDefault();\r\n    const name: boolean = checkName(),\r\n        surname: boolean = checkSurname(),\r\n        email: boolean = checkMail(),\r\n        pass: boolean = checkPass(),\r\n        v_pass: boolean = validPass();\r\n\r\n    if (name && surname && email && pass && v_pass) {\r\n        removeForm();\r\n        createReg();\r\n    }\r\n};\r\n\r\nconst submit = document.getElementById(\"submit\") as HTMLDivElement;\r\nsubmit.addEventListener(\"click\", checkInputs);\r\n\r\nconst reset = document.getElementById(\"reset\") as HTMLDivElement;\r\nreset.addEventListener(\"click\", clearForm);\r\n\r\nconst showPass = document.getElementById(\"check1\") as HTMLInputElement;\r\nshowPass.addEventListener(\"click\", togglePass);\r\n\r\nconst showValPass = document.getElementById(\"check2\") as HTMLInputElement;\r\nshowValPass.addEventListener(\"click\", toggleValPass);\r\n\r\nconst form: HTMLFormElement = document.forms[0];\r\nform.addEventListener(\"keypress\", refresh);"]}