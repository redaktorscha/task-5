{"version":3,"sources":["src\\highlightError.ts","src\\checkInputs.ts","src\\removeHighlightedError.ts","src\\validPass.ts","src\\togglePass.ts","src\\removeForm.ts","src\\createReg.ts","src\\clearForm.ts","src\\regexps.ts","src\\main.ts"],"names":[],"mappings":"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","file":"main.1d3edb5c.map","sourceRoot":"..","sourcesContent":["\r\n//подсвечивает неправильно заполненное поле формы, показывает скрытую надпись слева\r\nexport const highlightError = (errorMsgDiv: HTMLDivElement, targetInp: HTMLInputElement): void => { \r\n    //const targetInp = document.activeElement as HTMLInputElement;\r\n    //const targetElName: string = (document.activeElement as HTMLFormElement).name;\r\n    //const errorMsgDiv = document.getElementById(targetElName) as HTMLDivElement;\r\n    targetInp.classList.add(\"error\");\r\n    errorMsgDiv.style.visibility = \"visible\";\r\n    targetInp.blur();\r\n};","import {\r\n    highlightError\r\n} from './highlightError';\r\n\r\n//проверка инпутов (имя, фамилия, пароль)\r\nexport const checkInputs = (inputToCheck: HTMLInputElement, regex: RegExp): boolean => {\r\n    const checkRes = regex.test(inputToCheck.value.trim());\r\n\r\n    if (!checkRes) {\r\n        inputToCheck.focus();\r\n        highlightError(document.getElementById((document.activeElement as HTMLFormElement).name) as HTMLDivElement, document.activeElement as HTMLInputElement);\r\n        return checkRes;\r\n    }\r\n    return checkRes;\r\n};","//при нажатии на клавишу, когда поле формы заполняется, подсветка и надпись пропадают\r\nexport const removeHighlightedError = (errorMsgDiv: HTMLDivElement, targetInp: HTMLInputElement): void => { \r\n    //const targetInp = document.activeElement as HTMLInputElement;\r\n    //const targetElName: string = (document.activeElement as HTMLFormElement).name;\r\n    //const errorMsgDiv = document.getElementById(targetElName) as HTMLDivElement;\r\n    targetInp.classList.remove(\"error\");\r\n    errorMsgDiv.style.visibility = \"hidden\";\r\n  };\r\n","import { highlightError } from \"./highlightError\";\r\n//проверка поля с подтверждением пароля на соответствие паролю\r\nexport const validPass = (passField: HTMLInputElement, valPassField: HTMLInputElement): boolean => {\r\n    const val_passCheckRes: boolean = (valPassField.value === passField.value);\r\n    if (!val_passCheckRes) {\r\n        valPassField.focus();\r\n        highlightError(document.getElementById((document.activeElement as HTMLFormElement).name) as HTMLDivElement, document.activeElement as HTMLInputElement);\r\n        return val_passCheckRes;\r\n    }\r\n    return val_passCheckRes;\r\n};","//открывает и закрывает пароль\r\nexport const togglePass = (passwordInput: HTMLInputElement): void => {\r\n    passwordInput.type = passwordInput.type === \"password\" ? \"text\" : \"password\";\r\n};","//удаление формы\r\nexport const removeForm = (): void => {\r\n    const wrapper = document.getElementById(\"wrapper\") as HTMLDivElement;\r\n    wrapper.remove();\r\n};","//создает приветствие в случае успешной регистрации\r\nexport const createReg = (): void => {\r\n    const registered: HTMLDivElement = document.createElement(\"div\");\r\n    const regText: Text = document.createTextNode(\"Спасибо за регистрацию :-)\");\r\n    registered.classList.add(\"wrapper-reg\");\r\n    registered.appendChild(regText);\r\n    document.body.appendChild(registered);\r\n};","//очистка формы\r\nexport const clearForm = (): void => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n    const inputs: NodeListOf<HTMLInputElement> = document.querySelectorAll(\"input.input, input.error\");    \r\n    for (let i: number = 0; i < inputs.length; i++) {\r\n        inputs[i].value = \"\";\r\n        inputs[i].classList.remove(\"error\");\r\n    }\r\n    let hiddenDivs = document.getElementsByClassName(\"er_group\") as HTMLCollectionOf<HTMLDivElement>;\r\n    for (let k: number = 0; k < hiddenDivs.length; k++) {\r\n        hiddenDivs[k].style.visibility = \"hidden\";\r\n    }\r\n};","const nameRegexp: RegExp = /^.+$/;\r\nexport {nameRegexp};\r\n\r\nconst emailRegexp: RegExp = /^[a-zA-Z0-9][a-zA-Z0-9._%+-]{0,63}@(?:[a-zA-Z0-9-]{1,63}\\.){1,125}[a-zA-Z]{2,63}$/;\r\nexport {emailRegexp};\r\n\r\nconst passRegexp: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#])[a-zA-Z0-9-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]{8,}$/;\r\nexport {passRegexp};\r\n\r\n","import { checkInputs } from './checkInputs';\r\nimport { removeHighlightedError } from './removeHighlightedError';\r\nimport { validPass } from './validPass';\r\nimport { togglePass } from './togglePass';\r\nimport { removeForm } from './removeForm';\r\nimport { createReg} from './createReg';\r\nimport { clearForm } from './clearForm';\r\nimport { nameRegexp} from './regexps';\r\nimport { emailRegexp } from './regexps';\r\nimport { passRegexp } from './regexps';\r\n\r\n\r\n//валидация формы\r\nconst validateForm = (evt: Event): void => {\r\n    evt.preventDefault();\r\n    const fName = checkInputs(document.getElementById('f_name') as HTMLInputElement, nameRegexp),\r\n        sName = checkInputs(document.getElementById('s_name') as HTMLInputElement, nameRegexp),\r\n        mail = checkInputs(document.getElementById('mail') as HTMLInputElement, emailRegexp),\r\n        pass = checkInputs(document.getElementById('psw') as HTMLInputElement, passRegexp),\r\n        v_pass = validPass(document.getElementById('psw') as HTMLInputElement, document.getElementById('valpsw') as HTMLInputElement);\r\n\r\n    if (fName && sName && mail && pass && v_pass) {\r\n        removeForm();\r\n        createReg();\r\n    }\r\n};\r\n\r\nconst submitForm = document.getElementById('sbm') as HTMLDivElement;\r\nsubmitForm.addEventListener('click', validateForm);\r\n\r\nconst resetForm = document.getElementById('rst') as HTMLDivElement;\r\nresetForm.addEventListener('click', clearForm);\r\n\r\nconst showPass = document.getElementById('check1') as HTMLInputElement;\r\nshowPass.addEventListener('click', () => togglePass(document.getElementById('psw') as HTMLInputElement));\r\n\r\nconst showValPass = document.getElementById('check2') as HTMLInputElement;\r\nshowValPass.addEventListener('click', () => togglePass(document.getElementById('valpsw') as HTMLInputElement));\r\n\r\nconst form: HTMLFormElement = document.forms[0];\r\nform.addEventListener('keypress', () => removeHighlightedError(document.getElementById((document.activeElement as HTMLFormElement).name) as HTMLDivElement, document.activeElement as HTMLInputElement));"]}